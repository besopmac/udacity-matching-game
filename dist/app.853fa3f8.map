{"version":3,"sources":["js\\app.js"],"names":["board","document","getElementsByClassName","cards","deck","querySelector","moves","counter","stars","querySelectorAll","starsList","matchedCards","second","minute","hour","timer","interval","modal","getElementById","close","openedCards","shuffle","array","control","length","tempValue","index","Math","floor","random","body","onload","start","i","innerHTML","forEach","call","item","appendChild","classList","remove","style","color","visibility","clearInterval","displayCard","toggle","cardOpen","push","len","addCounter","dataset","type","matched","unmatched","add","disable","setTimeout","enable","Array","prototype","filter","card","startClock","setInterval","congrats","finalTime","starRate","closeModal","addEventListener","e","playAgain"],"mappings":"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","file":"app.853fa3f8.map","sourceRoot":"..","sourcesContent":["// collecting all cards on board\r\nlet board = document.getElementsByClassName('card');\r\nlet cards = [...board];\r\n\r\n// getting all cards on the deck\r\nconst deck = document.querySelector('.deck');\r\n\r\n// init moves variables\r\nlet moves;\r\nlet counter = document.querySelector('.moves');\r\n\r\n// getting the stars icons and rank list\r\nconst stars = document.querySelectorAll('.fa-star');\r\nlet starsList = document.querySelectorAll('.stars li');\r\n\r\n// getting the matched cards\r\nlet matchedCards = document.getElementsByClassName('match');\r\n\r\n// the clock variables\r\nlet second = 0, minute = 0, hour = 0;\r\nlet timer = document.querySelector('.clock');\r\nlet interval;\r\n\r\n// init the congratulations modal and get the close button\r\nlet modal = document.getElementById('congrats-modal');\r\nlet close = document.querySelector('.close');\r\n\r\n// openedCards init\r\nlet openedCards = [];\r\n\r\n\r\n// randomize cards position\r\nfunction shuffle(array) {\r\n    let control = array.length, tempValue, index;\r\n\r\n    while (control !== 0) {\r\n        index = Math.floor(Math.random() * control);\r\n        control -= 1;\r\n        tempValue = array[control];\r\n        array[control] = array[index];\r\n        array[index] = tempValue;\r\n    }\r\n\r\n    return array;\r\n}\r\n\r\n// shuffle cards when page is refreshed\r\ndocument.body.onload = start();\r\n\r\n\r\n// function to start and reset the board\r\nfunction start() {\r\n    // shuffle cards\r\n    cards = shuffle(cards);\r\n\r\n    // clear all classes from each card and append it on deck\r\n    for (let i = 0; i < cards.length; i++) {\r\n        deck.innerHTML = '';\r\n        [].forEach.call(cards, function(item) {\r\n            deck.appendChild(item);\r\n        });\r\n        cards[i].classList.remove('show', 'open', 'match', 'disabled');\r\n    }\r\n\r\n    // reset moves\r\n    moves = 0;\r\n    counter.innerHTML = `${moves} moves`;\r\n\r\n    // reset rating\r\n    for (let i = 0; i < stars.length; i++) {\r\n        stars[i].style.color = '#ffd700';\r\n        stars[i].style.visibility = 'visible';\r\n    }\r\n\r\n    // reset timer\r\n    second = 0;\r\n    minute = 0;\r\n    hour = 0;\r\n    let timer = document.querySelector('.clock');\r\n    timer.innerHTML = `${minute}m ${second}s`;\r\n    clearInterval(interval);\r\n}\r\n\r\n\r\n// displayCard is a function to change the card's states\r\nlet displayCard = function() {\r\n    this.classList.toggle('open');\r\n    this.classList.toggle('show');\r\n    this.classList.toggle('disabled');\r\n}\r\n\r\n\r\n// adding opened cards to a list and check if they are match or not\r\nfunction cardOpen() {\r\n    openedCards.push(this);\r\n\r\n    let len = openedCards.length;\r\n\r\n    if (len === 2) {\r\n        addCounter();\r\n        if (openedCards[0].dataset.type === openedCards[1].dataset.type) {\r\n            matched();\r\n        } else {\r\n            unmatched();\r\n        }\r\n    }\r\n}\r\n\r\n// when the cards data-type match\r\nfunction matched() {\r\n    openedCards[0].classList.add('match', 'disabled');\r\n    openedCards[1].classList.add('match', 'disabled');\r\n    openedCards[0].classList.remove('show', 'open');\r\n    openedCards[1].classList.remove('show', 'open');\r\n    openedCards = [];\r\n}\r\n\r\n// when the cards data-type don't match\r\nfunction unmatched() {\r\n    openedCards[0].classList.add('unmatched');\r\n    openedCards[1].classList.add('unmatched');\r\n    \r\n    disable();\r\n    setTimeout(function() {\r\n        openedCards[0].classList.remove('show', 'open', 'unmatched');\r\n        openedCards[1].classList.remove('show', 'open', 'unmatched');\r\n        enable();\r\n        openedCards = [];\r\n    }, 1000);\r\n}\r\n\r\n\r\n// disable cards by 1 second\r\nfunction disable() {\r\n    Array.prototype.filter.call(cards, function(card) {\r\n        card.classList.add('disabled');\r\n    });\r\n}\r\n\r\n// (r)enable cards and disable the matched cards\r\nfunction enable() {\r\n    Array.prototype.filter.call(cards, function(card) {\r\n        card.classList.remove('disabled');\r\n        for (let i = 0; i < matchedCards.length; i++) {\r\n            matchedCards[i].classList.add('disabled');\r\n        }\r\n    });\r\n}\r\n\r\n\r\n\r\n// counting the player's moves\r\nfunction addCounter() {\r\n    moves++;\r\n    counter.innerHTML = `${moves} move${(moves >= 2 ? 's' : '')}`;\r\n    \r\n\r\n    // starting the timer counter\r\n    if (moves == 1) {\r\n        second = 0;\r\n        minute = 0;\r\n        hour = 0;\r\n\r\n        startClock();\r\n    }\r\n\r\n    // starting the rating logic\r\n    if (moves > 8 && moves < 12) {\r\n        for (let i = 0; i < 3; i++) {\r\n            if (i > 1) {\r\n                stars[i].style.visibility = 'collapse';\r\n            }\r\n        }\r\n    } else if (moves > 13) {\r\n        for (let i = 0; i < 3; i++) {\r\n            if (i > 0) {\r\n                stars[i].style.visibility = 'collapse';\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n// the clock function\r\nfunction startClock() {\r\n    interval = setInterval(function() {\r\n        timer.innerHTML = `${minute}m ${second}s`;\r\n        second++;\r\n        if (second == 60) {\r\n            minute++;\r\n            second = 0;\r\n        }\r\n        if (minute == 60) {\r\n            hour++;\r\n            minute = 0;\r\n        }\r\n    }, 1000);\r\n}\r\n\r\n\r\n// when all cards match, congrats the player\r\nfunction congrats() {\r\n    if (matchedCards.length == 16) {\r\n        clearInterval(interval);\r\n        finalTime = timer.innerHTML;\r\n\r\n        // bring the congrats modal\r\n        modal.classList.add('show');\r\n\r\n        // init star rating\r\n        let starRate = document.querySelector('.stars').innerHTML;\r\n\r\n        // shows move, rating and time on modal\r\n        document.getElementById('finalMove').innerHTML = moves;\r\n        document.getElementById('starRate').innerHTML = starRate;\r\n        document.getElementById('totalTime').innerHTML = finalTime;\r\n\r\n        // close button on modal\r\n        closeModal();\r\n    };\r\n}\r\n\r\n// closeModal and playAgain functions\r\nfunction closeModal() {\r\n    close.addEventListener('click', function(e) {\r\n        modal.classList.remove('show');\r\n        start();\r\n    });\r\n}\r\n\r\nfunction playAgain() {\r\n    modal.classList.remove('show');\r\n    start();\r\n}\r\n\r\n\r\n// looping and adding event listeners to each card\r\nfor (let i = 0; i < cards.length; i++) {\r\n    card = cards[i];\r\n    card.addEventListener('click', displayCard);\r\n    card.addEventListener('click', cardOpen);\r\n    card.addEventListener('click', congrats);\r\n};\r\n"]}